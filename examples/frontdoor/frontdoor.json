{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "frontDoorName": {
      "type": "string"
    },
    "webAppName": {
      "type": "string"
    },
    "sku": {
      "type": "string"
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "frontdoor",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "frontDoorName": {
            "value": "[parameters('frontDoorName')]"
          },
          "backendAddress": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webApp'), '2019-10-01').outputs.webAppFQDN.value]"
          },
          "wafID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'frontdoorWaf'), '2019-10-01').outputs.wafID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "frontDoorName": {
              "type": "string"
            },
            "backendAddress": {
              "type": "string"
            },
            "wafID": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "functions": [],
          "variables": {
            "frontEndEndpointName": "frontEndEndpoint",
            "loadBalancingSettingsName": "loadBalancingSettings",
            "healthProbeSettingsName": "healthProbeSettings",
            "routingRuleName": "routingRule",
            "backendPoolName": "backendPool",
            "webApplicationFirewallPolicyLink": {
              "id": "[parameters('wafID')]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/frontDoors",
              "apiVersion": "2020-01-01",
              "name": "[parameters('frontDoorName')]",
              "location": "global",
              "properties": {
                "enabledState": "Enabled",
                "frontendEndpoints": [
                  {
                    "name": "[variables('frontEndEndpointName')]",
                    "properties": {
                      "hostName": "[concat(parameters('frontDoorName'), '.azurefd.net')]",
                      "sessionAffinityEnabledState": "Disabled",
                      "webApplicationFirewallPolicyLink": "[if(equals(parameters('wafID'), ''), null(), variables('webApplicationFirewallPolicyLink'))]"
                    }
                  }
                ],
                "loadBalancingSettings": [
                  {
                    "name": "[variables('loadBalancingSettingsName')]",
                    "properties": {
                      "sampleSize": 4,
                      "successfulSamplesRequired": 2
                    }
                  }
                ],
                "healthProbeSettings": [
                  {
                    "name": "[variables('healthProbeSettingsName')]",
                    "properties": {
                      "path": "/",
                      "protocol": "Http",
                      "intervalInSeconds": 120
                    }
                  }
                ],
                "backendPools": [
                  {
                    "name": "[variables('backendPoolName')]",
                    "properties": {
                      "backends": [
                        {
                          "address": "[parameters('backendAddress')]",
                          "backendHostHeader": "[parameters('backendAddress')]",
                          "httpPort": 80,
                          "httpsPort": 443,
                          "weight": 50,
                          "priority": 1,
                          "enabledState": "Enabled"
                        }
                      ],
                      "loadBalancingSettings": {
                        "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', parameters('frontDoorName'), variables('loadBalancingSettingsName'))]"
                      },
                      "healthProbeSettings": {
                        "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', parameters('frontDoorName'), variables('healthProbeSettingsName'))]"
                      }
                    }
                  }
                ],
                "routingRules": [
                  {
                    "name": "[variables('routingRuleName')]",
                    "properties": {
                      "frontendEndpoints": [
                        {
                          "id": "[resourceId('Microsoft.Network/frontDoors/frontEndEndpoints', parameters('frontDoorName'), variables('frontEndEndpointName'))]"
                        }
                      ],
                      "acceptedProtocols": [
                        "Http",
                        "Https"
                      ],
                      "patternsToMatch": [
                        "/*"
                      ],
                      "routeConfiguration": {
                        "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                        "forwardingProtocol": "MatchRequest",
                        "backendPool": {
                          "id": "[resourceId('Microsoft.Network/frontDoors/BackendPools', parameters('frontDoorName'), variables('backendPoolName'))]"
                        }
                      },
                      "enabledState": "Enabled"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'frontdoorWaf')]",
        "[resourceId('Microsoft.Resources/deployments', 'webApp')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "frontdoorWaf",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "frontDoorWafName": {
            "value": "[parameters('frontDoorName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "frontDoorWafName": {
              "type": "string",
              "defaultValue": "AzFd-TestingBicep-999"
            },
            "frontDoorWafEnabledState": {
              "type": "bool",
              "defaultValue": true
            },
            "frontDoorWafMode": {
              "type": "string",
              "defaultValue": "Prevention",
              "allowedValues": [
                "Prevention",
                "Detection"
              ]
            },
            "rateLimitAction": {
              "type": "string",
              "defaultValue": "Log",
              "metadata": {
                "description": "Type of Action based on the match filter. Must be Allow, Block or Log."
              },
              "allowedValues": [
                "Allow",
                "Block",
                "Log"
              ]
            },
            "customRuleLimit": {
              "type": "object",
              "defaultValue": {
                "name": "limitRule",
                "enabledState": "Enabled",
                "priority": 1,
                "ruleType": "RateLimitRule",
                "rateLimitDurationInMinutes": 1,
                "rateLimitThreshold": 10,
                "matchConditions": [
                  {
                    "matchVariable": "RequestUri",
                    "operator": "Any",
                    "negateCondition": false,
                    "matchValue": [],
                    "transforms": []
                  }
                ],
                "action": "Block"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies",
              "apiVersion": "2019-10-01",
              "name": "[parameters('frontDoorWafName')]",
              "location": "Global",
              "properties": {
                "policySettings": {
                  "enabledState": "[if(parameters('frontDoorWafEnabledState'), 'Enabled', 'Disabled')]",
                  "mode": "[parameters('frontDoorWafMode')]",
                  "customBlockResponseStatusCode": 403
                },
                "customRules": {
                  "rules": [
                    "[parameters('customRuleLimit')]"
                  ]
                },
                "managedRules": {
                  "managedRuleSets": [
                    {
                      "ruleSetType": "DefaultRuleSet",
                      "ruleSetVersion": "1.0",
                      "ruleGroupOverrides": [],
                      "exclusions": []
                    }
                  ]
                }
              }
            }
          ],
          "outputs": {
            "wafID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/FrontDoorWebApplicationFirewallPolicies', parameters('frontDoorWafName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "webApp",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "webAppName": {
            "value": "[parameters('webAppName')]"
          },
          "sku": {
            "value": "[parameters('sku')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "webAppName": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "sku": {
              "type": "string",
              "defaultValue": "S1"
            },
            "linuxFxVersion": {
              "type": "string",
              "defaultValue": "PYTHON|3.7"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "functions": [],
          "variables": {
            "appServicePlanName": "[toLower(format('AppServicePlan-{0}', parameters('webAppName')))]",
            "webSiteName": "[toLower(format('wapp-{0}', parameters('webAppName')))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-06-01",
              "name": "[variables('appServicePlanName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "kind": "linux",
              "properties": {
                "reserved": true
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-06-01",
              "name": "[variables('webSiteName')]",
              "location": "[parameters('location')]",
              "kind": "app",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "siteConfig": {
                  "linuxFxVersion": "[parameters('linuxFxVersion')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
              ]
            }
          ],
          "outputs": {
            "webAppName": {
              "type": "string",
              "value": "[variables('webSiteName')]"
            },
            "appServicePlan": {
              "type": "string",
              "value": "[variables('appServicePlanName')]"
            },
            "webAppFQDN": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', variables('webSiteName'))).defaultHostName]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "frontdoorFQDN": {
      "type": "string",
      "value": "[format('{0}.azurefd.net', parameters('frontDoorName'))]"
    },
    "webAppName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webApp'), '2019-10-01').outputs.webAppName.value]"
    }
  },
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.126.58533",
      "templateHash": "7668305914648797332"
    }
  }
}